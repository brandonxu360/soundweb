services:
  # React frontend application
  client:
    build:
      context: ./client
    volumes:
      - /code/client/node_modules # Allow container to manage its own dependencies
      - .:/code # Copy from root directory to include git
    working_dir: /code/client
    ports:
      - "5173:5173"
    # Enable HMR websocket connections
    command: npm run dev -- --host

  # Django backend application
  server:
    build:
      context: ./server
    # Copy from root directory to include git
    volumes:
      - .:/code
    working_dir: /code/server
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PW=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
    entrypoint: [ "/entrypoint.sh" ]
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      db:
        condition: service_healthy

  # PostgreSQL database
  db:
    image: postgres
    # Uncomment to persist data across container stops
    # volumes:
    #  - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  # Database management tool
  pgadmin:
    image: dpage/pgadmin4:latest
    # More info on pgAdmin container environment variables
    # (https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html)
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
      # Add server configuration as JSON
      - PGADMIN_SERVER_JSON_FILE=/pgadmin4/servers.json
    ports:
      - "5050:80"
    volumes:
      # Mount the server configuration file
      - ./pgadmin-servers.json:/pgadmin4/servers.json
